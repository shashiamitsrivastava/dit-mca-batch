class Solution {
    public List<List<Integer>> subsets(int[] nums) {
        List<Integer> smallList = new ArrayList<>();
        List<List<Integer>> bigList = new ArrayList<>();
        helper(nums, 0, smallList, bigList );
        return bigList;
    }
    void helper(int nums[], int index, List<Integer> smallList,
     List<List<Integer>> bigList){
        // Fake Base Case
        if(index>smallList.size()){
            return ;
        }
        bigList.add(new ArrayList<Integer>(smallList));
        // loop
        for(int i = 0; i<nums.length; i++){
            //if(!smallList.contains(nums[i])){
            // recursive call (Branching)
            smallList.add(nums[i]);
            helper(nums, i , smallList, bigList);
            // Stack Fall (Undo)
            smallList.remove(smallList.size()-1);
            //}
        }
     }
}
