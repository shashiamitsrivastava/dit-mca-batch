class Solution {
    String keys[] = {"", "", "abc", "def","ghi", "jkl", "mno", "pqrs", "tuv","wxyz"};
    public List<String> letterCombinations(String digits) {
        if(digits.length()==0){
            return new ArrayList<String>();
        }
        else{
            return helper(digits); // one or more digits
        }
    }
    public List<String> helper(String digits) {
        // Base Case
        if(digits.length()==0){
            List<String> list = new ArrayList<>();
            list.add(""); // Traversable
            return list;
        }
         // New List
        List<String> newList = new ArrayList<>();
        char firstDigit = digits.charAt(0);  // '2'
        int index = firstDigit - '0'; 
        String str = keys[index]; // e.g abc
        // e.g traverse abc
        for(int i = 0; i<str.length(); i++){
            // Small Problem
            List<String> oldList = helper(digits.substring(1));
            for(int j = 0; j<oldList.size(); j++){
                newList.add(str.charAt(i) + oldList.get(j));
            }
        }
        return newList;
       
       
    }
}
